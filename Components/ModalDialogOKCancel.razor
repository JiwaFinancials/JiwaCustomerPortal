@attribute [type: RenderModeInteractiveServer]
﻿@using Microsoft.AspNetCore.Components.Forms
@using JiwaCustomerPortal.Components

<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);"
     aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">                
                <h4 class="modal-title">@Title</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="@ModalCancel"></button>                
            </div>

            <div class="modal-body">
                <p>@Text</p>                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" @onclick=@ModalCancel>Cancel</button>
                <button type="button" class="btn btn-success" @onclick=@ModalOk>OK</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();        
    }    

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }
}
