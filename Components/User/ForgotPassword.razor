@page "/User/ForgotPassword"
@attribute [type: RenderModeInteractiveServer]
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@inject WebPortalUserSessionStateContainer WebPortalUserSessionStateContainer

<PageTitle>Forgot your password?</PageTitle>
<h1>Forgot your password?</h1>
<hr />
<div class="row">
    @if (APIRequestInPogress)
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
    <div class="col-md-4">
        <section>
            <StatusMessage Message="@errorMessage" />
            <EditForm Model="Input" method="post" OnValidSubmit="RequestPasswordResetLink" FormName="requestPasswordResetLink">
                <DataAnnotationsValidator />
                <h4>Enter your email to have a reset link emailed to you.</h4>
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>           
                
                @if (userHasMultipleAccounts)
                {
                    <StatusMessage Message="There are multiple accounts with that email address. Select the identity you wish to reset the password for."/>
                    <JiwaAPIAutoQueryGrid Model="JiwaFinancials.Jiwa.JiwaServiceModel.Tables.v_Jiwa_DB_ContactNameMultiple"
                                          QueryType="JiwaFinancials.Jiwa.JiwaServiceModel.Tables.v_Jiwa_DB_ContactNameMultipleQuery" AutoQuery="@debtorContactNameMultipleAutoQuery"
                                          HiddenColumns=@(new List<String> {"RecID"})
                                          CaptionMaps=@(new Dictionary<string, string> { ["Name"] = "Company", ["FirstName"] = "First Name"} )
                                          AddSelectButtonColumn="true"
                                          ItemSelectedCallbackMethod="@ItemSelected"
                                          AuthType="AuthTypes.JiwaAPIKey"
                                          APIExceptionCallbackMethod="@APIException">
                    </JiwaAPIAutoQueryGrid>
                }
                else
                {
                    <div>
                        <button type="submit" class="w-100 btn btn-lg btn-primary">Request Reset</button>
                    </div>
                }                
            </EditForm>

            
        </section>
    </div>
</div>

@code {
    private string? errorMessage;
    private bool APIRequestInPogress;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private JiwaFinancials.Jiwa.JiwaServiceModel.Tables.v_Jiwa_DB_ContactNameMultipleQuery debtorContactNameMultipleAutoQuery { get; set; }
    private bool userHasMultipleAccounts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    public async Task RequestPasswordResetLink()
    {
        userHasMultipleAccounts = false;
        errorMessage = null;

        // First see if this user has multiple contacts with this email address, if they do then we need them to select one

        debtorContactNameMultipleAutoQuery = new JiwaFinancials.Jiwa.JiwaServiceModel.Tables.v_Jiwa_DB_ContactNameMultipleQuery()
            {
                OrderBy = "Name",
                EmailAddress = Input.Email,
                Fields = "RecID,Name,FirstName,Surname",
                Take = 10
            };

        bool oldAPIRequestInPogress = APIRequestInPogress;
        APIRequestInPogress = true;
        try
        {
            ServiceStack.QueryResponse<JiwaFinancials.Jiwa.JiwaServiceModel.Tables.v_Jiwa_DB_ContactNameMultiple> response = await JiwaAPI.GetAsync(debtorContactNameMultipleAutoQuery, jiwaAPIKey: Config.JiwaAPIKey);
            if (response.Results.Count == 0)
            {
                // no matches - they don't have an account
                errorMessage = "No account with that email address was found.";
            }
            else if (response.Results.Count > 1)
            {
                // multiples - need the user to tell us which one they want to reset.
                userHasMultipleAccounts = true;
            }
            else
            {
                // just the one, so request the reset.
                await RequestPasswordResetLink(response.Results[0].RecID);
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            APIRequestInPogress = oldAPIRequestInPogress;
        }
    }

    public async Task RequestPasswordResetLink(string ContactID)
    {
        bool oldAPIRequestInPogress = APIRequestInPogress;
        APIRequestInPogress = true;

        try
        {
            JiwaFinancials.Jiwa.JiwaServiceModel.DebtorContactNameResetPasswordPOSTRequest resetPasswordPOSTRequest = new JiwaFinancials.Jiwa.JiwaServiceModel.DebtorContactNameResetPasswordPOSTRequest();
            resetPasswordPOSTRequest.ContactNameID = ContactID;
            resetPasswordPOSTRequest.ResetURL = $"{NavigationManager.BaseUri}User/PasswordReset/{{Token}}";
            ServiceStack.IReturnVoid response = await JiwaAPI.PostAsync<ServiceStack.IReturnVoid>(resetPasswordPOSTRequest, jiwaAPIKey: Config.JiwaAPIKey);

            NavigationManager.NavigateTo("/User/ForgotPasswordConfirmation");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            APIRequestInPogress = oldAPIRequestInPogress;
        }
    }

    public void APIException(Exception ex)
    {
        // just set the errorMessage property - the StatusMessage component will display it.
        errorMessage = ex.Message;
    }

    public void ItemSelected(JiwaFinancials.Jiwa.JiwaServiceModel.Tables.v_Jiwa_DB_ContactNameMultiple item)
    {
        RequestPasswordResetLink(item.RecID);
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}

    