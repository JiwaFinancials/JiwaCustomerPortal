@page "/User/Profile"
@attribute [type: RenderModeInteractiveServer]
@using System.ComponentModel.DataAnnotations

@inject ILogger<Profile> Logger
@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore
@inject WebPortalUserSessionStateContainer WebPortalUserSessionStateContainer

<PageTitle>Profile</PageTitle>

<div class="row">
    <div class="col-md-6">
        @if (@WebPortalUserSessionStateContainer.WebPortalUserSession != null)
        {
            <div class="col-md-9">
                <label for="Organisation" class="form-label">Organisation</label>
                <input type="text" class="form-control" id="Organisation" readonly placeholder="@WebPortalUserSessionStateContainer.WebPortalUserSession.DebtorName">
            </div>            
            <div class="col-md-1">
                <label for="Title" class="form-label">Title</label>
                <input type="text" class="form-control" id="Title" readonly placeholder="@WebPortalUserSessionStateContainer.WebPortalUserSession.DebtorContactNameTitle">
            </div>
            <div class="col-md-6">
                <label for="FirstName" class="form-label">First Name</label>
                <input type="text" class="form-control" id="FirstName" readonly placeholder="@WebPortalUserSessionStateContainer.WebPortalUserSession.DebtorContactNameFirstName">
            </div>
            <div class="col-md-6">
                <label for="Surname" class="form-label">Surname</label>
                <input type="text" class="form-control" id="Surname" readonly placeholder="@WebPortalUserSessionStateContainer.WebPortalUserSession.DebtorContactNameSurname">
            </div>
            <div class="col-md-6">
                <label for="Email" class="form-label">Email</label>
                <input type="text" class="form-control" id="Email" readonly placeholder="@WebPortalUserSessionStateContainer.WebPortalUserSession.DebtorContactNameEmailAddress">
            </div>

            <p></p>

            <div class="col-md-6">
                <button type="submit" class="w-100 btn btn-lg btn-primary" @onclick="ChangePassword">Change Password</button>
            </div>
            <p></p>
            <div class="col-md-6">
                <button type="submit" class="w-100 btn btn-lg btn-primary" @onclick="SignOut">Sign Out</button>
            </div>
        }
    </div>
</div>

<StatusMessage Message="@statusMessage" />

@code {
    private string? statusMessage;
    
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        if (WebPortalUserSessionStateContainer.ProtectedLocalStore == null)
        {
            try
            {
                await WebPortalUserSessionStateContainer.SetProtectedLocalStore(ProtectedLocalStore);
            }
            catch (Exception ex)
            {
                statusMessage = ex.Message;
                return;
            }
        }

        if (WebPortalUserSessionStateContainer.WebPortalUserSession == null)
        {
            // not authenticated
            NavigationManager.NavigateTo($"User/SignIn?returnUrl={NavigationManager.Uri}");
            return;
        }
    }      

    private void ChangePassword()
    {
        NavigationManager.NavigateTo($"User/ChangePassword");
    }

    private void SignOut()
    {
        NavigationManager.NavigateTo($"User/SignOut");
    }
}
