@attribute [type: RenderModeInteractiveServer]
﻿@using Microsoft.AspNetCore.Components.Forms
@using JiwaCustomerPortal.Components
@typeparam Model

<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" 
     aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>
            <div class="modal-body">
                <p>@Text</p>

                <div class="d-grid gap-2">
                    <div class="card">
                        <div class="card-body">
                            <h5>Sort</h5>
                            <button class="@SortButtonStyle(JiwaAutoQueryColumn<Model>.SortOrders.Ascending, Column.SortOrder) me-1" type=" button" title="Sort Ascending" @onclick="_ => Sort(JiwaAutoQueryColumn<Model>.SortOrders.Ascending)">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 16"><g fill="currentColor"><path fill-rule="evenodd" d="M10.082 5.629L9.664 7H8.598l1.789-5.332h1.234L13.402 7h-1.12l-.419-1.371h-1.781zm1.57-.785L11 2.687h-.047l-.652 2.157h1.351z" /><path d="M12.96 14H9.028v-.691l2.579-3.72v-.054H9.098v-.867h3.785v.691l-2.567 3.72v.054h2.645V14zm-8.46-.5a.5.5 0 0 1-1 0V3.707L2.354 4.854a.5.5 0 1 1-.708-.708l2-1.999l.007-.007a.498.498 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L4.5 3.707V13.5z" /></g></svg>
                                <span>ASC</span>
                            </button>
                            <button class="@SortButtonStyle(JiwaAutoQueryColumn<Model>.SortOrders.Descending, Column.SortOrder) me-1" type="button" title="Sort Descending" @onclick="_ => Sort(JiwaAutoQueryColumn<Model>.SortOrders.Descending)">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 16"><g fill="currentColor"><path d="M12.96 7H9.028v-.691l2.579-3.72v-.054H9.098v-.867h3.785v.691l-2.567 3.72v.054h2.645V7z" /><path fill-rule="evenodd" d="M10.082 12.629L9.664 14H8.598l1.789-5.332h1.234L13.402 14h-1.12l-.419-1.371h-1.781zm1.57-.785L11 9.688h-.047l-.652 2.156h1.351z" /><path d="M4.5 2.5a.5.5 0 0 0-1 0v9.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999l.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L4.5 12.293V2.5z" /></g></svg>
                                <span>DESC</span>
                            </button>
                        </div>
                    </div>

                    <div></div>
                
                    <div class="card">
                        <div class="card-body">
                            <h5>Filters</h5>
                            
                            @foreach (JiwaAutoQueryColumnFilter columnFilter in Column.Filters)
                            {
                                <span class="badge rounded-pill bg-primary">
                                    <button @onclick="_ => RemoveFilter(columnFilter)" class="btn" style="background-color:transparent">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 20 20">
                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
                                        </svg>
                                        @columnFilter.FilterOperator.DisplayValue @columnFilter.FilterValue
                                    </button>
                                </span>                                
                            }
                            
                            <div class="card">
                                <div class="card-body">
                                    <h6>Add Filter</h6>
                                    <div class="input-group mb-3">
                                        <select class="form-select" aria-label="Default select example" @onchange="FilterOperatorChanged">
                                            @foreach (JiwaAutoQueryColumnFilterOperator filterOperator in Column.FilterOperators)
                                            {
                                                <option value="@filterOperator.QueryModelProperty">@filterOperator.DisplayValue</option>
                                            }
                                        </select>
                                        <input type="text" class="form-control" placeholder="FilterValue" aria-label="Filter Value" @onchange="FilterValueChanged" />
                                        <button @onclick="_ => AddFilter()" type="button" class="btn btn-success">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" @onclick=@ModalCancel>Cancel</button>
                <button type="button" class="btn btn-success" @onclick=@ModalOk>OK</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public JiwaAutoQueryColumn<Model> Column { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    public string Title 
    { 
        get
        {
            return $"Sort and Filter Options for Column {Column.Caption}";
        }
    }

    public JiwaAutoQueryColumnFilter NewFilter = new JiwaAutoQueryColumnFilter();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        NewFilter.FilterOperator = Column.FilterOperators.FirstOrDefault();
    }

    async Task Sort(JiwaAutoQueryColumn<Model>.SortOrders sortOrder)
    {
        if (Column.SortOrder == sortOrder)
        {
            // if the column was already in the order selected, then we remove the sort altogether   
            Column.SortOrder = null;
        }
        else
        {
            Column.SortOrder = sortOrder;
        }        
    }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }

    private string SortButtonStyle(JiwaAutoQueryColumn<Model>.SortOrders sortButton, JiwaAutoQueryColumn<Model>.SortOrders? sortOrder)
    {
        if (sortOrder == null)
        {
            return "btn-secondary";
        }

        if (sortOrder == sortButton)
        {
            return "btn-primary";
        }
        else
        {
            return "btn-secondary";
        }
    }

    public void FilterOperatorChanged(ChangeEventArgs e)
    {        
        NewFilter.FilterOperator = Column.FilterOperators.FirstOrDefault(x => x.QueryModelProperty == e.Value.ToString());
    }

    public void FilterValueChanged(ChangeEventArgs e)
    {
        NewFilter.FilterValue = e.Value.ToString();
    }

    public void AddFilter()
    {
        // need to create a new filter and copy the contents to that and add THAT filter, otherwise what happens is up with all filters being the same value.
        if (NewFilter.FilterValue != null)
        {
            JiwaAutoQueryColumnFilter filterToAdd = new JiwaAutoQueryColumnFilter() { FilterOperator = NewFilter.FilterOperator, FilterValue = NewFilter.FilterValue };
            Column.Filters.Add(filterToAdd);
        }
    }

    public void RemoveFilter(JiwaAutoQueryColumnFilter columnFilter)
    {
        Column.Filters.Remove(columnFilter);
    }
}
