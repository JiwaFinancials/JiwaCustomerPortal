@attribute [type: RenderModeInteractiveServer]
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore
@inject WebPortalUserSessionStateContainer WebPortalUserSessionStateContainer

@if (WebPortalUserSessionStateContainer.WebPortalUserSession != null)
{
    <table class="table-borderless">
        <tbody>
            <tr>
                <td class="text-start"><h1><span class="label label-success" style="font-size:2vw;">@WebPortalUserSessionStateContainer.WebPortalUserSession.DebtorName</span></h1></td>
                <td>
                    <table class="table-borderless">
                        <tbody>
                            <tr>
                                <td class="text-end px-2">
                                    <a href="User/Profile">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-person" viewBox="0 0 16 16">
                                            <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
                                        </svg>
                                        @WebPortalUserSessionStateContainer.WebPortalUserSession.DebtorContactNameEmailAddress
                                    </a>
                                </td>
                            </tr>
                            <tr>
                                <td class="text-end px-2">
                                    <a href="/User/SignOut">Sign Out</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </td>
                <td>                
                </td>
            </tr>
        </tbody>
    </table>
}
else
{
    <table class="table-borderless">
        <tbody>
            <tr>
                <td class="px-2">
                    <a href="/User/SignIn">Sign In</a>
                </td>
            </tr>
         </tbody>
    </table>
}

@code 
{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        WebPortalUserSessionStateContainer.OnChange += StateChange;
    }

    public void Dispose()
    {
        WebPortalUserSessionStateContainer.OnChange -= StateChange;
    }

    public void StateChange()
    {
        // Need to InvokeAsync or pages which open in a new tab (eg: Sales Order PDF generation) will cause an exception:
        // "The current thread is not associated with the Dispatcher. Use InvokeAsync() to switch execution to the Dispatcher when triggering rendering or component state."
        InvokeAsync(StateHasChanged);
    }
}
